{"version":3,"sources":["components/Route.js","components/Link.js","pages/LandingPage.js","pages/WorkPage.js","components/Timer.js","App.js","index.js"],"names":["Route","path","children","useState","window","location","pathname","currentPath","setCurrentPath","useEffect","onLocationChange","addEventListener","removeEventListener","Link","href","className","onClick","event","metaKey","ctrKey","preventDefault","history","pushState","navEvent","PopStateEvent","dispatchEvent","LandingPage","style","width","height","fontSize","fontWeight","class","WorkPage","Component","newTask","setNewTask","tasks","setTasks","renderedTasks","map","task","checked","text","type","index","findIndex","elem","temp","updateTask","id","onSubmit","e","find","alert","push","addTask","form","placeholder","display","value","onChange","target","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.797d98d7.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst Route = ({ path, children }) => {\n  const [currentPath, setCurrentPath] = useState(window.location.pathname);\n\n  useEffect(() => {\n    const onLocationChange = () => {\n      setCurrentPath(window.location.pathname);\n    };\n    window.addEventListener('popstate', onLocationChange);\n\n    return () => {\n      window.removeEventListener('popstate', onLocationChange);\n    };\n  }, []);\n\n  return currentPath === `/react-experts${path}` ? children : null;\n};\n\nexport default Route;\n","import React from 'react';\n\nconst Link = ({ href, className, children }) => {\n  const onClick = (event) => {\n    if (event.metaKey || event.ctrKey) {\n      return;\n    }\n\n    event.preventDefault();\n    window.history.pushState({}, '', `/react-experts${href}`);\n\n    const navEvent = new PopStateEvent('popstate');\n    window.dispatchEvent(navEvent);\n  };\n\n  return (\n    <a onClick={onClick} href={`/react-experts${href}`} className={className}>{children}</a>\n  );\n};\n\nexport default Link;\n","import React from 'react';\nimport Link from '../components/Link'\n\nconst LandingPage = () => {\n  return (\n    <div className=\"d-flex flex-column justify-content-center align-items-center\" style={{width:\"100vw\", height:\"100vh\"}}>\n      <h1 className=\"mb-5\" style={{fontSize:\"120px\", fontWeight:\"100\"}}>Timer</h1>\n      <div class=\"circle-ripple\"></div>\n      <div className=\"d-flex flex-column flex-md-row justify-content-between\">\n        <Link className=\"select my-3 mx-md-3 work-btn\" href='/work'>Work</Link>\n        <Link className=\"select my-3 mx-md-3 sleep-btn\" href='/'>Sleep</Link>\n        <Link className=\"select my-3 mx-md-3 birth-btn\" href='/'>Birth Control</Link>\n      </div>\n    </div>\n  );\n}\n\nexport default LandingPage;\n","import React, { useState, useEffect } from 'react';\nimport Timer from '../components/Timer';\n\nconst WorkPage = () => {\n  const [progress, setProgress] = useState(0);\n  const [newTask, setNewTask] = useState('');\n  const [tasks, setTasks] = useState([]);\n\n  const updateTask = (text) => {\n    const index = tasks.findIndex(elem => elem.text === text);\n    let temp = tasks;\n    temp[index].checked = !temp[index].checked;\n    setTasks(temp);\n  }\n\n  const addTask = (e) => {\n    e.preventDefault();\n    if(newTask){\n      if(!tasks.find(elem => elem.text === newTask)){\n        let temp = tasks;\n        temp.push({'text': newTask, 'checked': false});\n        setTasks(tasks);\n      } else{\n        alert(\"Please use unique task names\");\n      }\n      setNewTask('');\n    }\n  }\n\n  const renderedTasks = tasks.map((task) => {\n    return (\n      <label key={task.text} className=\"task-group\" checked={task.checked ? 'checked' : 'unchecked'}>{task.text}\n        <input type=\"checkbox\" />\n        <span className=\"checkmark\" onClick={() => {updateTask(task.text)}}></span>\n      </label>\n    )\n  });\n\n  return (\n    <div className=\"container d-flex flex-column align-items-center\">\n      <h1 className=\"mt-3 title\">Work</h1>\n      <div className=\"line\"></div>\n      <div className=\"mt-3 d-flex flex-column align-items-start\">\n        {renderedTasks}\n        <form id=\"task-form\" onSubmit={(e) => {addTask(e)}}>\n          <div className=\"task-group\">\n            <button type=\"submit\" form=\"task-form\" className=\"add-btn d-flex flex-row justify-content-center align-items-center\">+</button>\n            <input className=\"task-entry\" type=\"text\" placeholder=\"Add a task\" style={{display:'inline'}} value={newTask} onChange={e => {setNewTask(e.target.value)}}></input>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default WorkPage;\n","import React, { Component } from 'react';\n\nclass Timer extends Component {\n    /*timer variables: \n        timerOn: whether timer is running or not\n        timerStart: time the countdown started from\n        timerTime: time the countdown is currently at\n    */\n    state = {\n        timerOn: false,\n        timerStart: 0, \n        timerTime: 1500000\n    };\n\n    //function to start and update the countdown (triggers upon clicking \"start\" / \"resume\" button)\n    startTimer = () => {\n        this.setState({\n            timerOn:true,\n            timerStart:this.state.timerTime,\n            timerTime: this.state.timerTime\n        });\n\n        //updates countdown every 10 ms\n        this.countdown = setInterval(() => {\n            const updatedTime = this.state.timerTime - 10;\n            if (updatedTime >= 0){\n                this.setState({\n                    timerTime: updatedTime\n                });\n            }\n            else{ //WHEN TIMER ENDS\n                clearInterval(this.countdown);\n                this.setState({timerOn:false});\n\n                //add code to play videos\n\n            }\n\n        },10); // end countdown function\n\n    };\n\n    //function allowing user to choose the length of time they want the countdown to run for\n    adjustTimer = input => {\n        const { timerTime, timerOn } = this.state;\n        const maxTime = 3600000; //max time you can set timer for = 1 hr\n\n        if(!timerOn){ //only runs if timer is not going\n            if(input === \"plusMins\" && (timerTime + 60000 < maxTime) ){ \n                this.setState({timerTime: timerTime + 60000 });\n            }\n            else if(input === \"minusMins\" && (timerTime - 60000 >= 0 ) ){\n                this.setState({timerTime: timerTime - 60000});\n            }\n            else if(input === \"plusSecs\" && (timerTime + 1000 < maxTime) ){\n                this.setState({timerTime: timerTime + 1000});\n            }\n            else if(input === \"minusSecs\" && (timerTime - 1000 >= 0)){\n                this.setState({timerTime: timerTime - 1000});\n            }\n        }\n    }; //end adjust timer\n\n    //stop timer function\n    stopTimer = () => {\n        clearInterval(this.countdown);\n        this.setState({ timerOn: false });\n    };\n\n    //reset timer function\n    resetTimer = () => {\n        if (this.state.timerOn === false) {\n            this.setState({\n            timerTime: this.state.timerStart\n            });\n        }\n    };\n\n    //clear timer function\n    clearTimer = () => {\n        if(this.state.timerTime >= 1000){\n            clearInterval(this.countdown);\n            this.setState({\n                timerOn:false,\n                timerStart: 0,\n                timerTime: 0\n            });\n        }\n    }\n\n    \n\n    render(){\n        const { timerTime, timerStart, timerOn } = this.state;\n        let seconds = (\"0\" + (Math.floor((timerTime / 1000) % 60) % 60)).slice(-2);\n        let minutes = (\"0\" + Math.floor((timerTime / 60000) % 60)).slice(-2);\n        return(\n            <div className=\"timer justify-content-center text-center align-middle\">\n                <div className=\"timer-header\">Insert Timer Here (from Timer.js)</div>\n                <div className=\"timer-label\">Mins : Secs</div>\n                <div className=\"timer-display\">\n                    <button onClick={() => this.adjustTimer(\"plusMins\")}>+</button>\n                    <button onClick={() => this.adjustTimer(\"plusSecs\")}>+</button>\n                    <div className=\"countdown-display\">\n                        {minutes} : {seconds}\n                    </div>\n                    <button onClick={() => this.adjustTimer(\"minusMins\")}>-</button>\n                    <button onClick={() => this.adjustTimer(\"minusSecs\")}>-</button>\n                </div>\n                <div className=\"timer-buttons\">\n                    {/* start */}\n                    {timerOn === false && (timerStart === 0 || timerTime === timerStart) && (\n                        <button onClick={this.startTimer}>Start</button>\n                    )}\n                    {/* stop */}\n                    {timerOn === true && timerTime >= 1000 && (\n                    <button onClick={this.stopTimer}>Stop</button>\n                    )}\n                    {/* resume */}\n                    {timerOn === false &&\n                    (timerStart !== 0 && timerStart !== timerTime && timerTime !== 0) && (\n                        <button onClick={this.startTimer}>Resume</button>\n                    )}\n                    {/* reset */}\n                    {(timerOn === false || timerTime < 1000) &&\n                    (timerStart !== timerTime && timerStart > 0) && (\n                        <button onClick={this.resetTimer}>Reset</button>\n                    )}\n                    {/* clear */}\n                    {timerTime >= 1000 && (\n                        <button onClick={this.clearTimer}>Clear</button>\n                    )}\n                </div>\n            </div>\n        );\n    }\n    \n}\n\nexport default Timer;","import './master.css';\nimport React from 'react';\nimport Route from './components/Route';\nimport LandingPage from './pages/LandingPage';\nimport WorkPage from './pages/WorkPage';\n\nconst App = () => {\n  return (\n    <div>\n      <Route path=\"/\">\n        <LandingPage />\n      </Route>\n      <Route path=\"/work\">\n        <WorkPage />\n      </Route>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.querySelector('#root'))\n"],"sourceRoot":""}